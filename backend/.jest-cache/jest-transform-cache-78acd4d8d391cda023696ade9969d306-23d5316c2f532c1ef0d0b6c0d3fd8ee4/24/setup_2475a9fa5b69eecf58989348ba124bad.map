{"file":"/home/cometom3/App/dartDev/TechPlus/backend/src/test/setup.ts","mappings":";;;AAAA,2CAA8C;AAC9C,iCAAqC;AAErC,kCAAkC;AAClC,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;AA4CzB,wBAAM;AA3Cf,MAAM,KAAK,GAAG,IAAA,oBAAY,EAAC;IACzB,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,0BAA0B;CACzD,CAAC,CAAC;AAyCc,sBAAK;AAvCtB,oCAAoC;AACpC,SAAS,CAAC,KAAK,IAAI,EAAE;IACnB,yCAAyC;IACzC,MAAM,MAAM,CAAC,QAAQ,EAAE,CAAC;IAExB,4BAA4B;IAC5B,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;IAEtB,oBAAoB;IACpB,MAAM,OAAO,EAAE,CAAC;AAClB,CAAC,CAAC,CAAC;AAEH,4BAA4B;AAC5B,SAAS,CAAC,KAAK,IAAI,EAAE;IACnB,MAAM,OAAO,EAAE,CAAC;AAClB,CAAC,CAAC,CAAC;AAEH,sCAAsC;AACtC,QAAQ,CAAC,KAAK,IAAI,EAAE;IAClB,MAAM,OAAO,EAAE,CAAC;IAChB,MAAM,MAAM,CAAC,WAAW,EAAE,CAAC;IAC3B,MAAM,KAAK,CAAC,UAAU,EAAE,CAAC;AAC3B,CAAC,CAAC,CAAC;AAEH,wBAAwB;AACxB,KAAK,UAAU,OAAO;IACpB,8BAA8B;IAC9B,MAAM,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACtC,MAAM,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC/B,MAAM,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;IACrC,MAAM,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAChC,MAAM,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;IACnC,MAAM,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;IAEpC,iBAAiB;IACjB,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;AACxB,CAAC","names":[],"sources":["/home/cometom3/App/dartDev/TechPlus/backend/src/test/setup.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\nimport { createClient } from 'redis';\n\n// Configuration globale des tests\nconst prisma = new PrismaClient();\nconst redis = createClient({ \n  url: process.env.REDIS_URL || 'redis://localhost:6379/1' \n});\n\n// Setup global avant tous les tests\nbeforeAll(async () => {\n  // Connexion à la base de données de test\n  await prisma.$connect();\n  \n  // Connexion à Redis de test\n  await redis.connect();\n  \n  // Nettoyage initial\n  await cleanup();\n});\n\n// Cleanup après chaque test\nafterEach(async () => {\n  await cleanup();\n});\n\n// Cleanup global après tous les tests\nafterAll(async () => {\n  await cleanup();\n  await prisma.$disconnect();\n  await redis.disconnect();\n});\n\n// Fonction de nettoyage\nasync function cleanup() {\n  // Nettoyer la base de données\n  await prisma.reservation.deleteMany();\n  await prisma.user.deleteMany();\n  await prisma.restaurant.deleteMany();\n  await prisma.table.deleteMany();\n  await prisma.menuItem.deleteMany();\n  await prisma.analytics.deleteMany();\n  \n  // Nettoyer Redis\n  await redis.flushDb();\n}\n\n// Exporter les instances pour les tests\nexport { prisma, redis };\n"],"version":3}